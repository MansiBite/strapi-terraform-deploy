name: Deploy to AWS ECS Fargate

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPO: mansibite
  ECR_URL: 057569470997.dkr.ecr.ap-south-1.amazonaws.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO .

      - name: Tag Docker image
        run: |
          docker tag $ECR_REPO:latest $ECR_URL/$ECR_REPO:latest

      - name: Push Docker image to ECR
        run: |
          docker push $ECR_URL/$ECR_REPO:latest

      - name: Terraform Init
        working-directory: terraform2
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -input=false -auto-approve \
            -var="image_url=${{ secrets.IMAGE_URL }}" \
            -var="app_keys=${{ secrets.APP_KEYS }}" \
            -var="admin_jwt_secret=${{ secrets.ADMIN_JWT_SECRET }}" \
            -var="api_token_salt=${{ secrets.API_TOKEN_SALT }}" \
            -var="transfer_token_salt=${{ secrets.TRANSFER_TOKEN_SALT }}" \
            -var="encryption_key=${{ secrets.ENCRYPTION_KEY }}"


# Task Updated