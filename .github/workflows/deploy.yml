name: Deploy Strapi to AWS ECS using Terraform & CodeDeploy (Blue/Green)

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: mansibite
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: cd terraform && terraform init

      - name: Terraform Plan
        env:
          TF_VAR_app_keys: ${{ secrets.APP_KEYS }}
          TF_VAR_admin_jwt_secret: ${{ secrets.ADMIN_JWT_SECRET }}
          TF_VAR_api_token_salt: ${{ secrets.API_TOKEN_SALT }}
          TF_VAR_transfer_token_salt: ${{ secrets.TRANSFER_TOKEN_SALT }}
          TF_VAR_encryption_key: ${{ secrets.ENCRYPTION_KEY }}
        run: cd terraform && terraform plan

      - name: Terraform Apply
        env:
          TF_VAR_app_keys: ${{ secrets.APP_KEYS }}
          TF_VAR_admin_jwt_secret: ${{ secrets.ADMIN_JWT_SECRET }}
          TF_VAR_api_token_salt: ${{ secrets.API_TOKEN_SALT }}
          TF_VAR_transfer_token_salt: ${{ secrets.TRANSFER_TOKEN_SALT }}
          TF_VAR_encryption_key: ${{ secrets.ENCRYPTION_KEY }}
        run: cd terraform && terraform apply -auto-approve

      - name: Prepare final task definition file with secrets
        run: |
          mkdir -p terraform/output
          envsubst < terraform/taskdef.json > terraform/output/taskdef-final.json
        env:
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          APP_KEYS: ${{ secrets.APP_KEYS }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Trigger CodeDeploy Blue/Green deployment
        run: |
          APPSPEC_CONTENT=$(base64 terraform/appspec.yml | tr -d '\n')

          aws deploy create-deployment \
            --application-name strapi-cd-app \
            --deployment-group-name strapi-dg \
            --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
            --revision "revisionType=AppSpecContent,appSpecContent={content=$APPSPEC_CONTENT}" \
            --description "Strapi Blue/Green Deployment from GitHub Actions"

